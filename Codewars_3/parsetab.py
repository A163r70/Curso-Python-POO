
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEASSIGN DIVIDE IDENTIFIER LPAREN MINUS MULTIPLY NUMBER PLUS RPAREN SEMICOLONstatement : assignment SEMICOLONassignment : IDENTIFIER ASSIGN expressionexpression : expression PLUS term\n| expression MINUS termexpression : termterm : term MULTIPLY factor\n| term DIVIDE factorterm : factorfactor : NUMBERfactor : IDENTIFIER'
    
_lr_action_items = {'IDENTIFIER':([0,5,11,12,13,14,],[3,6,6,6,6,6,]),'$end':([1,4,],[0,-1,]),'SEMICOLON':([2,6,7,8,9,10,15,16,17,18,],[4,-10,-2,-5,-8,-9,-3,-4,-6,-7,]),'ASSIGN':([3,],[5,]),'NUMBER':([5,11,12,13,14,],[10,10,10,10,10,]),'MULTIPLY':([6,8,9,10,15,16,17,18,],[-10,13,-8,-9,13,13,-6,-7,]),'DIVIDE':([6,8,9,10,15,16,17,18,],[-10,14,-8,-9,14,14,-6,-7,]),'PLUS':([6,7,8,9,10,15,16,17,18,],[-10,11,-5,-8,-9,-3,-4,-6,-7,]),'MINUS':([6,7,8,9,10,15,16,17,18,],[-10,12,-5,-8,-9,-3,-4,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'assignment':([0,],[2,]),'expression':([5,],[7,]),'term':([5,11,12,],[8,15,16,]),'factor':([5,11,12,13,14,],[9,9,9,17,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement','parser.py',66),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','parser.py',73),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','parser.py',84),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','parser.py',85),
  ('expression -> term','expression',1,'p_expression_term','parser.py',94),
  ('term -> term MULTIPLY factor','term',3,'p_term_binop','parser.py',98),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','parser.py',99),
  ('term -> factor','term',1,'p_term_factor','parser.py',108),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',112),
  ('factor -> IDENTIFIER','factor',1,'p_factor_identifier','parser.py',116),
]
